(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'Activo'"
p3
sS'layer'
p4
S'D:\\backup servidor\\uli\\web2py\\web2py\\applications\\patrimonio\\controllers/consulta.py'
p5
sS'code'
p6
S'@auth.requires(auth.has_membership(\'Administrador\') or auth.has_membership(\'Usuario\'))\ndef consulta():\n\n    depe=form=query=\'\'\n    \n    \n    \n\n    \n    \n    if request.get_vars[\'depe\']:\n            depe = request.get_vars[\'depe\']\n\n\n        \n    #fields=[db.carga.dependencia,db.carga.tipo,db.carga.marca,db.carga.modelo,db.carga.serie] \n    #if depe!="":\n        #quey=(db.carga.dependencia.like(\'%\'+depe+\'%\')&(db.carga.estado=="Ativo"))\n                        \n           \n\n        #form = SQLFORM.grid(query)#|db.carga.dependencia.like(\'%\'+depe+\'%\'),\n\n\n    a=db(db.carga.dependencia=="Activo").select()\n    b=0\n   \n            \n\n\n\n\n\n\n\n\n\n    \n   \n\n\n   \n\n    return dict(query=query,depe=depe,a=a,b=b)    \n\ndef menu():\n    return dict()\n\n \n\n\n\n\n\n@auth.requires(auth.has_membership(\'Administrador\') or auth.has_membership(\'Usuario\'))\ndef consulta1():\n    \n   \n    sn= ""\n    \n    \n\n    \n    \n    if request.get_vars[\'sn\']:\n            sn = request.get_vars[\'sn\']\n\n        \n    fields=[db.carga.dependencia,db.carga.tipo,db.carga.marca,db.carga.modelo,db.carga.serie]  \n    form=""\n\n    \n\n  \n\n        \n\n    \n\n\n\n\n\n\n    if sn!="":\n\n      \n       \n\n        form = SQLFORM.grid((db.carga.serie.upper().like(\'%\'+sn+\'%\')),#|db.carga.dependencia.like(\'%\'+depe+\'%\'),\n            csv=False,\n            create=False,\n            searchable=False,\n             editable=True,\n             deletable=False,\n            details=True,\n            selectable=None,\n               \n            fields=fields)\n\n\n            \n    \n    \n    return dict(form=form,sn=sn)\n\n\n@auth.requires(auth.has_membership(\'Administrador\') or auth.has_membership(\'Usuario\'))\ndef consulta2():\n    sn=""\n    depen=""\n    form=""\n    query=""\n    x=""\n    dep=""\n    depno=""\n    #if request.get_vars[\'depe\']:\n            #sn = request.get_vars[\'depe\']\n    #if depe!="":t\n    depen=db.carga.estado\n    #friltro los equivos inactivos para no visualizarlos\n    #depe=db(depen)\n    #dep=depe.estado!="Inactivo".select()\n    for depe in db(db.carga.estado!=\'Inactivo\').select():\n        print depe.estado\n\n\n\n    \n    \n\n\n\n    return dict(depen=depen,dep=dep,depe=depe,sn=sn,form=form,query=query,x=x)\n\n\nresponse._vars=response._caller(consulta)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\applications\\patrimonio\\controllers/consulta.py", line 137, in <module>\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\gluon\\globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\gluon\\tools.py", line 4241, in f\n    return action(*a, **b)\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\applications\\patrimonio\\controllers/consulta.py", line 25, in consulta\n    a=db(db.carga.dependencia=="Activo").select()\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\gluon\\packages\\dal\\pydal\\objects.py", line 2020, in select\n    return adapter.select(self.query, fields, attributes)\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\sqlite.py", line 123, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1283, in select\n    sql = self._select(query, fields, attributes)\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1170, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 952, in expand\n    rv = op(first, second, **optional_args)\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 846, in EQ\n    self.expand(second, first.type))\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 962, in expand\n    rv = self.represent(expression, field_type)\n  File "D:\\backup servidor\\uli\\web2py\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1442, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'Activo\'\n'
p11
s.